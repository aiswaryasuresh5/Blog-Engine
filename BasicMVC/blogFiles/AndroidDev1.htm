<article>
<h4>MVC Framework</h4>
<p>
The Model-View-Controller (MVC) is an architectural pattern that separates an application into three main logical components: the model, the view, and the controller.
</p>
<h4>Model</h4>
<p>
The Model component corresponds to all the data-related logic that the user works with.
</p>
<h4>View</h4>
<p>
The View component is used for all the UI logic of the application.
</p>
<h4>Controller</h4>
<p>
Controllers act as an interface between Model and View components to process all the business logic and incoming requests, manipulate data using the Model component and interact with the Views to render the final output. 
</p>
ASP.NET MVC Features
<ol>
<li>Ideal for developing complex but lightweight applications.</li>
<li>Does not use the concept of View State (which is present in ASP.NET). </li>
<li>Supports all the existing vast ASP.NET functionalities, such as Authorization and Authentication, Master Pages, Data Binding, User Controls, Memberships, ASP.NET Routing, etc.</li>
</ol>
</article>